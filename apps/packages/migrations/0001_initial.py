# Generated by Django 3.1.7 on 2021-04-23 06:37

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(help_text='Activity', max_length=255)),
                ('image', models.ImageField(default='default.jpg', help_text='Image related to category 1600*597', upload_to='activity')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Bookings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_count', models.PositiveIntegerField(help_text='Number of seats for booking.')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(help_text='Your mobile number (e.g. +12125552368)', max_length=128, region=None)),
                ('is_confirmed', models.BooleanField(default=False, help_text='Check this box for confirm this booking.')),
                ('is_read', models.BooleanField(verbose_name='I have read terms & conditions.')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(help_text='Category', max_length=255)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('continent', models.CharField(help_text='Continent Name', max_length=255)),
                ('about', ckeditor_uploader.fields.RichTextUploadingField(help_text='Continent Short Info')),
                ('image', models.ImageField(default='default.jpg', help_text='Continent Image 270*240', upload_to='continent_photo')),
                ('cover', models.ImageField(default='default.jpg', help_text='Continent Cover 1600*597', upload_to='continent_cover')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(help_text='Country Name', max_length=255)),
                ('about', ckeditor_uploader.fields.RichTextUploadingField(help_text='Short info about country')),
                ('image', models.ImageField(default='blog.jpg', help_text='Country Image 364*294', upload_to='country_image')),
                ('cover', models.ImageField(default='default.jpg', help_text='Country Cover 1600*596', upload_to='country_cover')),
                ('slug', models.SlugField(unique=True)),
                ('continent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='packages.continent')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_image', models.ImageField(default='default.jpg', help_text='Image 570*360', upload_to='package_img')),
                ('package_cover', models.ImageField(default='default.jpg', help_text='Cover 1600*596', upload_to='package_cover')),
                ('name', models.CharField(help_text='Package Name', max_length=255)),
                ('about', models.TextField(blank=True, help_text='Trip Overview')),
                ('currency', models.CharField(choices=[('₹', 'INR'), ('$', 'USD'), ('€', 'EURO')], help_text='Currency type', max_length=4)),
                ('original_cost', models.PositiveIntegerField(help_text='Package Original Cost')),
                ('group_cost', models.PositiveIntegerField(help_text='Package Group Cost')),
                ('gst_option', models.CharField(choices=[('None', 'GST data not available'), ('Extra', 'GST extra as applicable'), ('Included', 'GST included')], help_text='Select GST choice', max_length=8)),
                ('difficulty', models.CharField(choices=[('E', 'Easy'), ('M', 'Moderate'), ('C', 'Challenging')], help_text='Select difficulty level', max_length=1)),
                ('duration', models.PositiveIntegerField(help_text='Trip Duration')),
                ('start_point', models.CharField(help_text='Starting Point', max_length=255)),
                ('end_point', models.CharField(help_text='End Point', max_length=255)),
                ('group_size', models.PositiveIntegerField(help_text='Group Size')),
                ('min_age', models.PositiveIntegerField(help_text='Min age')),
                ('max_alt', models.CharField(help_text='Maximum Altitude', max_length=255)),
                ('best_season', models.CharField(help_text='Best Season', max_length=255)),
                ('walking', models.CharField(help_text='Walking Per Day', max_length=255)),
                ('booking_option', models.BooleanField(default=False, help_text='Bookings only with onrequest option.')),
                ('is_less_explored_region', models.BooleanField(default=False, help_text='Is it Less Explored Region Package?')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('activity', models.ManyToManyField(help_text='Select related activities.', to='packages.Activity')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='packages.category')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='packages.country')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(help_text='Region Name', max_length=255)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(help_text='Trip start date')),
                ('end_date', models.DateTimeField(help_text='Trip end date')),
                ('seats', models.PositiveIntegerField(help_text='Total Seats')),
                ('booking_available', models.BooleanField(default=True, help_text='Booking Available for this schedule?')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='schedules', to='packages.package')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(help_text='Select between 1-5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(help_text='Write your review here')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reviews', to='packages.package')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.TextField()),
                ('order_id', models.TextField()),
                ('signature', models.TextField()),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='packages.bookings')),
            ],
        ),
        migrations.CreateModel(
            name='PackageInclution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('breakfast', models.PositiveIntegerField(help_text='Number of breakfasts')),
                ('lunch', models.PositiveIntegerField(help_text='Number of lunches')),
                ('dinner', models.PositiveIntegerField(help_text='Number of dinners')),
                ('vehicles', models.TextField(help_text='Types of transport')),
                ('accommodation', models.TextField(help_text='Accommodation Info')),
                ('inclution', ckeditor_uploader.fields.RichTextUploadingField(help_text='Complete package inclution details')),
                ('package', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='packages.package')),
            ],
        ),
        migrations.CreateModel(
            name='PackageGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='gallery/%Y/%m/%d/')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='packages.package')),
            ],
        ),
        migrations.CreateModel(
            name='PackageFlexibleCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_range', models.CharField(help_text='Person range', max_length=255)),
                ('flex_cost', models.PositiveIntegerField(help_text='cost per person')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='flexible_costs', to='packages.package')),
            ],
        ),
        migrations.CreateModel(
            name='PackageExclution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exclution', ckeditor_uploader.fields.RichTextUploadingField(help_text='Package Exclutions')),
                ('package', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='packages.package')),
            ],
        ),
        migrations.AddField(
            model_name='package',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='packages.region'),
        ),
        migrations.AddField(
            model_name='package',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='OnRequestBookings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], max_length=10)),
                ('seat_count', models.PositiveIntegerField(help_text='Number of seats for booking.')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(help_text='Your mobile number (e.g. +12125552368)', max_length=128, region=None)),
                ('short_message', models.TextField(blank=True, help_text='Any short message or previous experiences related to mountaineering or any outdoor experiences')),
                ('is_confirmed', models.BooleanField(default=False, help_text='Check this box for confirm this booking.')),
                ('is_read', models.BooleanField(help_text='I have read terms & conditions.')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='on_request_bookings', to='packages.package')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Itinerary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itinerary', ckeditor_uploader.fields.RichTextUploadingField()),
                ('package', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='packages.package')),
            ],
        ),
        migrations.CreateModel(
            name='FitnessGuide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manual', ckeditor_uploader.fields.RichTextUploadingField()),
                ('package', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='packages.package')),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faq', ckeditor_uploader.fields.RichTextUploadingField()),
                ('package', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='packages.package')),
            ],
        ),
        migrations.CreateModel(
            name='DetailedItinerary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detailed_itinerary', ckeditor_uploader.fields.RichTextUploadingField()),
                ('package', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='packages.package')),
            ],
        ),
        migrations.CreateModel(
            name='DailyUseItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items', ckeditor_uploader.fields.RichTextUploadingField()),
                ('package', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='packages.package')),
            ],
        ),
        migrations.AddField(
            model_name='bookings',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='packages.package'),
        ),
        migrations.AddField(
            model_name='bookings',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='schedules', to='packages.schedule'),
        ),
        migrations.AddField(
            model_name='bookings',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
